/*
 * PowerNukkit JUnit 5 Testing Framework
 * Copyright (C) 2020  José Roberto de Araújo Júnior
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.powernukkit.tests.mocks;

import org.apiguardian.api.API;
import org.powernukkit.tests.api.ReflectionUtil;

import java.lang.reflect.Field;

import static org.apiguardian.api.API.Status.EXPERIMENTAL;

/**
 * 
 * @param <T> The main type that is generated by this mocker
 *     
 * @author joserobjr
 */
@API(status = EXPERIMENTAL, since = "0.1.0")
public abstract class Mocker<T> {
    private Field instanceField;

    private Object instance;
    
    @API(status = EXPERIMENTAL, since = "0.1.0")
    public abstract T create() throws ReflectiveOperationException;

    @API(status = EXPERIMENTAL, since = "0.1.0")
    public final void createAndSet(Object instance, Field field) throws ReflectiveOperationException {
        setInstance(instance);
        setInstanceField(field);
        T mock = create();
        ReflectionUtil.setField(instance, field, mock);
    }

    @API(status = EXPERIMENTAL, since = "0.1.0")
    public void recreate() throws ReflectiveOperationException {
        T mock = create();
        Field field = getInstanceField();
        if (field != null) {
            ReflectionUtil.setField(getInstance(), field, mock);
        }
    }

    @API(status = EXPERIMENTAL, since = "0.1.0")
    public Field getInstanceField() {
        return instanceField;
    }

    @API(status = EXPERIMENTAL, since = "0.1.0")
    public Object getInstance() {
        return instance;
    }

    @API(status = EXPERIMENTAL, since = "0.1.0")
    public void setInstance(Object instance) {
        this.instance = instance;
    }

    @API(status = EXPERIMENTAL, since = "0.1.0")
    public void setInstanceField(Field instanceField) {
        this.instanceField = instanceField;
    }
}
